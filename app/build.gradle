/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.14/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.springframework.boot' version '3.2.5' // or your Spring Boot version
    id 'io.spring.dependency-management' version '1.1.4'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}
ext{
    lombokVersion="1.18.30"
}
dependencies {
    // Use JUnit test framework.
    testImplementation libs.junit


    // This dependency is used by the application.
    implementation libs.guava
    // Spring Web for REST APIs
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Spring Data JPA for database access
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // OAuth2 Resource Server (JWT, etc.)
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    // Spring Boot Actuator for health/metrics
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.modelmapper:modelmapper:3.2.0'
    implementation group:'mysql',name:'mysql-connector-java',version:'8.0.33'
    // MySQL Driver (replace with other DB if needed)
    runtimeOnly 'mysql:mysql-connector-java'

    // Lombok (optional, for annotations like @Getter, @Setter)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'  // Use the latest version
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.5' //f
    // Test support
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testAnnotationProcessor 'org.projectlombok:lombok'

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.App'
}
